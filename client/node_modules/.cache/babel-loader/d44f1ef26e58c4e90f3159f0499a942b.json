{"ast":null,"code":"var _jsxFileName = \"/Users/yipengli/Downloads/Mern-Stack-Project-main/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useStyles from './styles';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  var _user$result3;\n\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      var _user$result;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n    } else {\n      var _user$result2;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n    }\n\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"Please Sign In to create your own posts and like other's posts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\" \", currentId ? 'Editing' : 'Creating', \" a Post\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Form, \"wcx3a5Iwgvdd9cFTFwaoNtehAdU=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/yipengli/Downloads/Mern-Stack-Project-main/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","useStyles","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","user","JSON","parse","localStorage","getItem","handleSubmit","e","preventDefault","name","result","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport useStyles from './styles'\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'\nimport FileBase from 'react-file-base64'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createPost, updatePost } from '../../actions/posts'\n\n\nconst Form = ({ currentId, setCurrentId }) => {\n   const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '' })\n   const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null)\n   const classes = useStyles()\n   const dispatch = useDispatch()\n   const user = JSON.parse(localStorage.getItem('profile'))\n\n   useEffect(() => {\n      if (post) setPostData(post)\n   }, [post])\n\n   const handleSubmit = (e) => {\n      e.preventDefault()\n\n      if (currentId) {\n         dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }))\n      } else {\n         dispatch(createPost({ ...postData, name: user?.result?.name }))\n      }\n      clear()\n   }\n\n   const clear = () => {\n      setCurrentId(null)\n      setPostData({ title: '', message: '', tags: '', selectedFile: '' })\n   }\n\n   if (!user?.result?.name) {\n      return (\n         <Paper className={classes.paper}>\n            <Typography variant=\"h6\" align=\"center\">\n               Please Sign In to create your own posts and like other's posts.\n            </Typography>\n         </Paper>\n      );\n   }\n\n   return (\n      <Paper className={classes.paper}>\n         <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n            <Typography variant=\"h6\" > {currentId ? 'Editing' : 'Creating'} a Post</Typography>\n            <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n            <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n            <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n            <div className={classes.fileInput}>\n               <FileBase\n                  type=\"file\"\n                  multiple={false}\n                  onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })}\n               />\n            </div>\n            <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n            <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n         </form>\n      </Paper>\n   );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}